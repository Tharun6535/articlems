# Test Environment Configuration

# Server configuration
server.port=8080

# H2 Database Configuration - using in-memory mode for tests
spring.datasource.url=jdbc:h2:mem:testdb;MODE=MySQL
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA/Hibernate configuration - recreate schema on each test run
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Initialize the database using schema.sql and data.sql scripts
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql

# Logging Configuration - more verbose for testing
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.org.hibernate=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.security=DEBUG
logging.level.com.ali=DEBUG

# File upload settings - separate directory for tests
file.upload-dir=uploads/test

# JWT Configuration - using test keys
app.jwtSecret=TestSecretKeyForJWTSigningMustBeAtLeast32BytesLong12345
app.jwtExpirationMs=3600000  # 1 hour for tests
bezkoder.app.jwtSecret=TestSecretKeyForJWTSigningMustBeAtLeast32BytesLong12345
bezkoder.app.jwtExpirationMs=3600000
bezkoder.app.tempTokenExpirationMs=300000

# CORS configuration
spring.mvc.cors.allowed-origins=http://localhost:3000
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allow-credentials=true

# Test-specific properties
app.environment=test
app.debug-mode=true
app.test-mode=true

# ID Generation Strategy
spring.jpa.properties.hibernate.id.new_generator_mappings=false
spring.jpa.properties.hibernate.use_identifier_rollback=false

# Enable SQL error messages
spring.jpa.properties.hibernate.show_sql=false

# Enable detailed error messages
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never
server.error.include-exception=false

# Configure logging
logging.level.root=WARN
logging.level.org.springframework=INFO
logging.level.org.hibernate=INFO
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.org.springframework.security=ERROR
logging.level.com.ali=ERROR

# API Configuration
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# Allow bean definition overriding
spring.main.allow-bean-definition-overriding=true

# File upload settings
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# Add filter order to ensure our image filter runs first
spring.security.filter.order=15

# Disable security for actuator endpoints for easier debugging
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# URL patterns that should never be secured
security.ignored=/api/upload/files/**, /public/**, /media/**

# Mail Configuration (dummy for test)
spring.mail.host=localhost
spring.mail.port=1025
spring.mail.username=test@example.com
spring.mail.password=test
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false
app.frontend.url=http://localhost:3000 