# Production Environment Configuration

# Server configuration
server.port=8080
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
# MySQL Database Configuration for PROD
spring.h2.console.enabled=false
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DB:proddb}?useSSL=true&serverTimezone=UTC
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.username=${MYSQL_USER:root}
spring.datasource.password=${MYSQL_PASSWORD:password}
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# ID Generation Strategy
spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.jpa.properties.hibernate.use_identifier_rollback=false

# Do not initialize the database in production
spring.sql.init.mode=never
spring.jpa.defer-datasource-initialization=false

# Enable SQL error messages
spring.jpa.properties.hibernate.show_sql=false

# Enable detailed error messages
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false

# Configure logging
logging.level.root=WARN
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.org.springframework.security=ERROR
logging.level.com.ali=INFO

# API Configuration
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# JWT Configuration
app.jwtSecret=${JWT_SECRET:ProductionSecretKeyForJWTSigningMustBeVeryLongAndSecure123456789}
app.jwtExpirationMs=${JWT_EXPIRATION:86400000}
bezkoder.app.jwtSecret=${JWT_SECRET:ProductionSecretKeyForJWTSigningMustBeVeryLongAndSecure123456789}
bezkoder.app.jwtExpirationMs=${JWT_EXPIRATION:86400000}
bezkoder.app.tempTokenExpirationMs=${TEMP_TOKEN_EXPIRATION:300000}

# Allow bean definition overriding
spring.main.allow-bean-definition-overriding=false

# File upload settings
file.upload-dir=${FILE_UPLOAD_DIR:/app/uploads}
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Add filter order to ensure our image filter runs first
spring.security.filter.order=15

# Disable security for actuator endpoints for easier debugging
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=never

# URL patterns that should never be secured
security.ignored=/api/upload/files/**, /public/**, /media/**

# CORS configuration
spring.mvc.cors.allowed-origins=${CORS_ORIGINS:https://yourdomain.com}
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE
spring.mvc.cors.allow-credentials=true

# Security settings
security.require-ssl=true
server.tomcat.remoteip.remote-ip-header=x-forwarded-for
server.tomcat.remoteip.protocol-header=x-forwarded-proto

# Production-specific settings
app.environment=production
app.debug-mode=false

# Mail Configuration
spring.mail.host=${MAIL_HOST:smtp.example.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:your_email@example.com}
spring.mail.password=${MAIL_PASSWORD:your_password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
app.frontend.url=${FRONTEND_URL:https://yourdomain.com} 